@page "/"
@page "/catalogo"


@inject ICategoriaService iCategoriaService;
@inject IProductoService iProductoService;
@inject NavigationManager navService

<style>
    body {
        background-color: #262a2d;
    }
</style>
<h1 style="color:#FFF; text-align:center; margin-top: 10px; font-weight: 900">CATALOGO WARMISITAY</h1>
<div class="row justify-content-center mt-3 mb-4">

    <div class="col-sm-6 col-md-8 col-xl-9">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar producto..." @bind-value="buscar">
            <button class="btn btn-light" type="button" @onclick="(async () => await  ObtenerCatalogo())">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
            </button>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-sm-3">


        <div id="accordion" style="background-color: #383b3d; border-radius:25px">
            <div class="accordion-item" style="background-color: #383b3d;">
                <h2 class="accordion-header" id="headingOne" style="background-color: #383b3d;">
                    <button style="background-color: #383b3d; color:#fff; font-size:20px; font-weight:600" class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Categorías
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordion">
                    <div class="accordion-body">
                        @if (listaCategoria != null)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="categoria" id="todos" value="todos"
                                       @onchange="RadioSeleccion"
                                       checked=@(categoriaSeleccionada.Equals("todos"))>
                                <label class="form-check-label" for="todos" style="color:#fff"> 
                                    Todos
                                </label>
                            </div>

                            @foreach (var item in listaCategoria)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="categoria" id="@item.IdCategoria" value="@item.Nombre"
                                           @onchange="RadioSeleccion"
                                           checked=@(categoriaSeleccionada.Equals(item.Nombre, StringComparison.OrdinalIgnoreCase))>
                                    <label class="form-check-label" for="@item.IdCategoria" style="color:#fff">
                                        @item.Nombre
                                    </label>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden" style="color:#fff">Loading...</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>



        </div>

    </div>

    <div class="col-sm-9" style="margin-top: 20px">
        <div class="row gx-4 row-cols-1 row-cols-md-3 row-cols-xl-4 justify-content-start">
            @if (listaProducto != null)
            {

                foreach (var item in listaProducto)
                {
                    <div class="col mb-5">
                    <div class="card h-100" style="background:#383b3d; border: 3px solid #fff; border-radius: 14px;">
                            @if (DateTime.Now < item.FechaCreacion.Value.AddDays(1))
                            {
                                <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nuevo</div>

                            }
                            <img class="card-img-top border-dark border-1" src="@item.Imagen" style="width:100%;height:250px">
                            <div class="card-body p-4">
                                <div class="text-center">
                                <h5 class="fw-bolder" style="color:#fff">@item.Nombre</h5>
                                    @if (item.PrecioOferta != 0 && item.PrecioOferta < item.Precio)
                                    {
                                        <span class="text-danger text-decoration-line-through">S/. @item.Precio</span>
                                    <span style="color:#fff">S /.@item.PrecioOferta</span>
                                    }
                                    else
                                    {
                                        <span style="color:#fff">S /.@item.Precio</span>
                                    }

                                </div>
                            </div>
                            <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                                <div class="text-center"><a class="btn btn-light mt-auto" href="/detalle/@item.IdProducto">Ver producto</a></div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
        </div>
    </div>



@code {

    private List<CategoriaDTO>? listaCategoria = null;
    private List<ProductoDTO>? listaProducto = null;
    private string buscar = "";
    private string categoriaSeleccionada = "todos";



    private async Task ObtenerC(string valor = "")
    {
        var response = await iCategoriaService.Listar(valor);
        if (response.Correcto)
        {
            listaCategoria = (List<CategoriaDTO>)response.Resultado!;
        }
        else
        {
            listaCategoria = new List<CategoriaDTO>();
        }
    }



    private async Task ObtenerCatalogo()
    {
        var response = await iProductoService.Categoria(categoriaSeleccionada, buscar);
        if (response.Correcto)
        {
            listaProducto = (List<ProductoDTO>)response.Resultado!;
        }
        else
        {
            listaProducto = new List<ProductoDTO>();
        }
    }



    private async Task RadioSeleccion(ChangeEventArgs e)
    {
        categoriaSeleccionada = e.Value.ToString();
        buscar = "";

        await ObtenerCatalogo();
    }



    protected override async Task OnInitializedAsync()
    {
        await ObtenerC();
        await ObtenerCatalogo();
    }
}
