@page "/login"
@layout LoginLayout

@using WEB.Extensiones
@using Microsoft.AspNetCore.Components.Authorization
@inject IUsuarioService IUsuarioService
@inject NavigationManager navManager
@inject SweetAlertService SWAService
@inject AuthenticationStateProvider autProvider

<div class="container-fluid">
    <div class="row justify-content-center align-items-center min-vh-100">
        <div class="col-md-6 col-lg-4">
            <div class="card border-0 shadow p-3 rounded">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Iniciar Sesión</h3>
                    <EditForm Model="modelo" OnValidSubmit="Iniciar">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label for="inputEmail" class="form-label">Correo</label>
                            <input class="form-control" id="inputEmail" type="email" placeholder="admin@example.com" @bind="@modelo.Correo" autocomplete="off" />
                            <ValidationMessage For="@(()=>modelo.Correo)" />
                        </div>
                        <div class="mb-3">
                            <label for="inputPassword" class="form-label">Contraseña</label>
                            <input class="form-control" id="inputPassword" type="password" placeholder="123" @bind="@modelo.Clave" autocomplete="off" />
                            <ValidationMessage For="@(()=>modelo.Clave)" />
                        </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-primary" type="submit">Ingresar</button>
                        </div>
                    </EditForm>
                    <div class="text-center mt-3">
                        <small><a href="/registrarse">¿No tienes una cuenta? ¡Regístrate!</a></small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDTO modelo = new LoginDTO();

    private async Task Iniciar()
    {
        var response = await IUsuarioService.Autorizacion(modelo);
        if (response.Correcto)
        {
            SesionDTO sesion = (SesionDTO)response.Resultado;

            var autenticacion = (AutenticacionExtension)autProvider;
            await autenticacion.ActualizarEstadoAutenticacion(sesion);

            if (sesion.Rol.ToLower() == "cliente")
            {
                navManager.NavigateTo("/catalogo");
            }
            else
            {
                navManager.NavigateTo("/dashboard");
            }
        }
        else
        {
            await SWAService.FireAsync(response.Mensaje);
        }
    }
}